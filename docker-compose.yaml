version: '3.3'

services:
  publisher:
    build:
      context: ./publisher/
      dockerfile: ./Dockerfile.Publisher
    restart: on-failure
    ports:
        - "9090:9090"
    depends_on:
      - mongodb
      - subscriber

  solace-init:
    build:
      context: ./solace/
      dockerfile: Dockerfile
    container_name: solace-init
    restart: "no"
    depends_on:
      solace:
        condition: service_healthy
  
  subscriber:
      build:
        context: ./subscriber/
        dockerfile: ./Dockerfile.Subscriber
      restart: on-failure
      environment:
        - SPRING_DATA_MONGODB_URI=mongodb://root:example@host.docker.internal:27017/users?authSource=admin
      depends_on:
        - mongodb
        - solace

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    depends_on:
      solace:
        condition: service_healthy
    networks:
      - mongo-db
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - mongodb_data:/data/db


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/users?authSource=admin
    depends_on:
      - mongodb
    networks:
      - mongo-db

  solace:
    container_name: solace
    image: solace/solace-pubsub-standard:latest
    volumes:
      - "solace:/var/lib/solace"
    shm_size: 1g
    ulimits:
      core: -1
      nofile:
        soft: 2448
        hard: 6592
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 1
    ports:
    #Port Mappings:  With the exception of SMF, ports are mapped straight
    #through from host to container.  This may result in port collisions on
    #commonly used ports that will cause failure of the container to start.
      #Web transport
      - '8008:8008'
      #Web transport over TLS
      - '1443:1443'
      #SEMP over TLS
      - '1943:1943'
      #MQTT Default VPN
      - '1883:1883'
      #AMQP Default VPN over TLS
      - '5671:5671'
      #AMQP Default VPN
      - '5672:5672'
      #MQTT Default VPN over WebSockets
      - '8000:8000'
      #MQTT Default VPN over WebSockets / TLS
      - '8443:8443'
      #MQTT Default VPN over TLS
      - '8883:8883'
      #SEMP / PubSub+ Manager
      - '8080:8080'
      #REST Default VPN
      - '9000:9000'
      #REST Default VPN over TLS
      - '9443:9443'
      #SMF
      - 55554:55555
      #SMF Compressed
      - 55050:55003
      #SMF over TLS
      - 55443:55443
      #SSH connection to CLI
      - 2222:2222
    environment:
      - username_admin_globalaccesslevel=admin
      - username_admin_password=admin
      - system_scaling_maxconnectioncount=100
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
      start_interval: 5s

networks:
  app-net:
  mongo-db:


volumes:
  mongodb:
  storage-group:
  solace:
  mongodb_data:
